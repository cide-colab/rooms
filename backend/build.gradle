buildscript {
	ext {
		kotlinVersion = '1.3.61'
		springBootVersion = '2.2.5.RELEASE'
		keycloakVersion = '9.0.0'
		gradleDockerVersion   = "1.2"
		mysqlVersion = "8.0.16"
		jacksonVersion = "2.10.0.pr1"
		apacheCommonsVersion = "4.5.9"
		dokka_version = "0.10.0"
//		swaggerVersion = "3.0.0-SNAPSHOT"
	}
	repositories {
		jcenter()
		mavenCentral()
		maven { url 'https://repo.spring.io/snapshot' }
		maven { url 'https://repo.spring.io/milestone' }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion")
		classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
		classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
//		classpath("se.transmode.gradle:gradle-docker:${gradleDockerVersion}")
	}

}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: "kotlin-jpa"
apply plugin: "kotlin-noarg"
apply plugin: "kotlin-allopen"
apply plugin: 'org.jetbrains.dokka'

//apply plugin: 'docker'

group = 'com.thkoeln.florianherborn'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
//
//task buildDocker(type: Docker, dependsOn: build) {
//	applicationName = 'rooms-server'
//	baseImage = 'openjdk:8-jdk-alpine'
//	maintainer = 'Florian Herborn "florian.herborn@th-koeln.de"'
//	tag = "thkoeln/${applicationName}"
//	tagVersion = "latest"
//	def jarName = "${applicationName}-${version}.jar"
//	exposePort(8080)
//	addFile(jar.archivePath, jarName)
//	entryPoint(['java',"-Djava.security.egd=file:/dev/./urandom","-jar","/${jarName}"])
//}
//
//task buildDockerDev(type: Docker, dependsOn: build) {
//	applicationName = 'rooms-server-dev'
//	baseImage = 'openjdk:8-jdk-alpine'
//	maintainer = 'Florian Herborn "florian.herborn@th-koeln.de"'
//	tag = "thkoeln/${applicationName}"
//	tagVersion = "latest"
//	def jarName = "${applicationName}-${version}.jar"
//	exposePort(8081)
//	addFile(jar.archivePath, jarName)
//	entryPoint(['java',"-Djava.security.egd=file:/dev/./urandom","-jar","/${jarName}"])
//}



repositories {
	jcenter()
	mavenLocal()
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
//	jcenter {url "http://oss.jfrog.org/artifactory/oss-snapshot-local/"}
}


dependencies {
	implementation("org.springframework.boot:spring-boot-starter-actuator:$springBootVersion")
	implementation("org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion")
	implementation("org.springframework.boot:spring-boot-starter-data-rest:$springBootVersion")
	implementation("org.springframework.boot:spring-boot-starter-security:$springBootVersion")


//	implementation("org.springframework.boot:spring-boot-starter-mail:$springBootVersion")
	implementation("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
	implementation("org.springframework.boot:spring-boot-starter:$springBootVersion")
	runtime("org.springframework.boot:spring-boot-devtools:$springBootVersion")

	implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.0.rc1")
	implementation("com.fasterxml.jackson.module:jackson-module-kotlin:2.10.+")
	implementation("org.springframework.data:spring-data-rest-hal-browser:3.0.8.RELEASE")

	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion")
	implementation("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")
	implementation("mysql:mysql-connector-java:$mysqlVersion")

//	implementation("io.springfox:springfox-swagger2:$swaggerVersion")
//	implementation("io.springfox:springfox-data-rest:$swaggerVersion")
//	implementation("io.springfox:springfox-swagger-ui:$swaggerVersion")

	implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion")

//	implementation("org.keycloak:keycloak-core:$keycloakVersion")
//	implementation("org.keycloak:keycloak-adapter-core:$keycloakVersion")

	implementation("org.keycloak:keycloak-spring-boot-starter")

	implementation("org.apache.httpcomponents:httpclient:$apacheCommonsVersion")
    implementation 'org.junit.jupiter:junit-jupiter'

	testImplementation("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
	testImplementation("org.springframework.security:spring-security-test")
	testImplementation("org.junit.jupiter:junit-jupiter-engine:5.2.0")
}

dependencyManagement {
	imports {
		mavenBom "org.keycloak.bom:keycloak-adapter-bom:${keycloakVersion}"
		mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
	}
}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

allOpen {
	annotation("com.thkoeln.cide.roomsserver.annotations.Constructable")
}

noArg {
	annotation("com.thkoeln.cide.roomsserver.annotations.Constructable")
}

dokka {
	outputFormat = 'html'
	outputDirectory = "docs/"
}

test {
	useJUnitPlatform()
}